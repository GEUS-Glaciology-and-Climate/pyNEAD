#+TITLE: pyNEAD - Python interface to NEAD file format


* Table of contents                               :toc_3:noexport:
- [[#citation][Citation]]
  - [[#file-format][File format]]
- [[#warning][WARNING]]
- [[#installation][Installation]]
- [[#usage][Usage]]

* Citation

Iosifescu Enescu, I., Bavay, M., Plattner, G.-K. (2020). Sharing and reusing meteorological data. WMO Data Conference 2020 - Earth System Data Exchange in the 21st Century (Virtual Conference).

** File format

The NEAD file format is document at https://github.com/GEUS-PROMICE/NEAD

* WARNING

+ This is alpha level software under development.
+ Please contact Ken Mankoff <kdm@geus.dk> before using.

* Installation

#+BEGIN_SRC bash :results verbatim
pip install git+https://github.com/GEUS-PROMICE/pyNEAD.git
#+END_SRC

Can be run in new environment, for example:

Conda:

#+BEGIN_SRC bash :results verbatim
conda create -n NEAD python=3.8 pandas numpy # jupyter
conda activate NEAD
pip install --upgrade git+https://github.com/GEUS-PROMICE/pyNEAD.git
#+END_SRC

* Usage
:PROPERTIES:
:header-args:jupyter-python+: :kernel PROMICE_dev :session nead :exports both :results raw drawer :exports both
:END:

Read a NEAD file:

#+NAME: nead-read-simple
#+BEGIN_SRC jupyter-python :exports code
import nead
df = nead.read("sample_csv.dsv", multi_index=False)
df.head()
#+END_SRC

#+NAME: nead-read-simple
#+BEGIN_SRC jupyter-python :exports results
import importlib
importlib.reload(nead)
<<nead-read-simple>>
#+END_SRC

#+RESULTS: nead-read-simple
|   | timestamp           |  TA | RH |  VW | ISWR |
|---+---------------------+-----+----+-----+------|
| 0 | 2010-06-22T12:00:00 |   2 | 52 | 1.2 |  320 |
| 1 | 2010-06-22T13:00:00 |   3 | 60 | 2.4 |  340 |
| 2 | 2010-06-22T14:00:00 | 2.8 | 56 |   2 |  330 |

Convert to MKS units and also pass arguments to the Pandas [[https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.read_csv.html][read_csv]] command:

#+NAME: nead-read-complex
#+BEGIN_SRC jupyter-python :exports code
import nead
df = nead.read("sample_csv.dsv", MKS=True, multi_index=False, index_col=0)
df.head()
#+END_SRC

#+NAME: nead-read-complex
#+BEGIN_SRC jupyter-python  :exports results
import importlib
importlib.reload(nead)
<<nead-read-complex>>
#+END_SRC

#+RESULTS: nead-read-complex
| timestamp           |     TA |   RH |  VW | ISWR |
|---------------------+--------+------+-----+------|
| 2010-06-22T12:00:00 | 275.15 | 0.52 | 1.2 |  320 |
| 2010-06-22T13:00:00 | 276.15 |  0.6 | 2.4 |  340 |
| 2010-06-22T14:00:00 | 275.95 | 0.56 |   2 |  330 |

You can access the header properties in the =.attrs= dictionary.

#+BEGIN_SRC jupyter-python :exports both
import nead
df = nead.read("sample_csv.dsv", index_col=0)
print(df.head())
print("")
for key in df.attrs.keys():
  print(key, '=', df.attrs[key])
#+END_SRC

#+RESULTS:
#+begin_example
fields                  TA     RH     VW   ISWR
add_value           273.15   0.00   0.00   0.00  
scale_factor          1.00   0.01   1.00   1.00
timestamp                                      
2010-06-22T12:00:00    2.0     52    1.2  320.0
2010-06-22T13:00:00    3.0     60    2.4  340.0
2010-06-22T14:00:00    2.8     56    2.0  330.0

__format__ = NEAD 1.0 UTF-8
station_id = test_station
latitude = 46.5
longitude = 9.8
altitude = 1500
nodata = -999
tz = 1
field_delimiter = ,
#+end_example
